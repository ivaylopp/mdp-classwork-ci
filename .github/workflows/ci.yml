name: CI

on:
  push:
  workflow_call:
    inputs:
      java-version:
        type: string
        required: false
        default: "17"

env:
  DOCKER_IMAGE_NAME_AND_TAG: ${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.ref_name }}-${{ github.sha }}

jobs:
  gitleaks:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  editorconfig-checker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Load editorconfig-checker
        uses: editorconfig-checker/action-editorconfig-checker@main

      - name: Run editorconfig-checker
        run: editorconfig-checker


  markdownlint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Run markdownlint
        uses: articulate/actions-markdownlint@v1


  unit-tests:
    runs-on: ubuntu-latest
    container: maven:3.9.6-amazoncorretto-${{ inputs.java-version }}

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Run tests with Maven
        run: mvn test


  build:
    needs: [editorconfig-checker, markdownlint, gitleaks, unit-tests]
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Cache Docker image layers
        uses: actions/cache@v3
        with:
          key: java-17-${{ hashFiles('**/pom.xml') }}
          path: |
            /var/lib/docker

      - name: Build the Docker image
        run: docker build -t ghcr.io/${{ env.DOCKER_IMAGE_NAME_AND_TAG }} .

      - name: Log in to the GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push the Docker image
        run: docker push ghcr.io/${{ env.DOCKER_IMAGE_NAME_AND_TAG }}


  trivy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Run trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ env.DOCKER_IMAGE_NAME_AND_TAG }}
          format: table
          exit-code: 1
          severity: CRITICAL


  sonarcloud:
    needs: build
    runs-on: ubuntu-latest
    container: maven:3.9.6-amazoncorretto-${{ inputs.java-version }}
    env:
      SONAR_ORGANIZATION: sonar365892
      SONAR_PROJECT_KEY: sonar365892_sonar365892

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SonarCloud Scan
        run: |
          mvn clean verify sonar:sonar \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.organization=${{ env.SONAR_ORGANIZATION }} \
          -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} \


  snyk:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repositoryg
        uses: actions/checkout@v3

      - name: Run Snyk
        run: |
          npm install -g snyk
          snyk auth ${{ secrets.SNYK_TOKEN }}
          snyk test


  flyway:
    needs: build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: db
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - uses: joshuaavalon/flyway-action@v3.0.0
        with:
          url: jdbc:postgresql://postgres:5432/db
          user: user
          password: password
          locations: filesystem:src/main/resources/db/migrations


  upload-to-dockerhub:
    needs: [sonarcloud, trivy, snyk, flyway]
    runs-on: ubuntu-latest

    steps:
      - name: Pull from GitHub Container Registry
        run: docker pull ghcr.io/${{ env.DOCKER_IMAGE_NAME_AND_TAG }}

      - name: Re-tag image for Dockerhub
        run: docker tag ghcr.io/${{ env.DOCKER_IMAGE_NAME_AND_TAG }} ${{ env.DOCKER_IMAGE_NAME_AND_TAG }}

      - name: Log in to dockerhub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u ${{ github.repository_owner }} --password-stdin

      - name: Push the Docker image
        run: docker push ${{ env.DOCKER_IMAGE_NAME_AND_TAG }}


  deploy-to-k8s:
    if: github.ref == 'refs/heads/main'
    needs: [ upload-to-dockerhub ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v2
        with:
          method: service-account
          k8s-url: https://66b99a9b-2c70-47d0-af98-53c96d0212b9.k8s.ondigitalocean.com
          k8s-secret: ${{ secrets.K8S_SECRET }}

      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v1
        with:
          namespace: ns1
          manifests: |
            kubernetes/deployment.yaml
          images: |
            ${{ env.DOCKER_IMAGE_NAME_AND_TAG }}
